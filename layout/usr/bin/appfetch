#!/bin/bash
# AppFetch - Turann & Randy420

ver="0.0.1"

print_message() {
	for message in "$@"; do
		echo -e "$message"
		sleep 0.05
	done
}

check_invalid_appID() {
	toCheck="${1}"
	result=$(uicache --list "${toCheck}")
	if [[ $result =~ "Invalid appID provided:" ]]; then
		unset result
	fi
	echo "$result"
}

search_app() {
	app_name="${1}"
	if [ "$download_location" -eq 1 ]; then
		url="https://apiv2.iphonecake.com/appcake/appcake_api/spv6/appsearch_r.php?device=1&q=${app_name}&p=0"
	else
		url="https://api.ipahub.com/search_tweaks.php?key=${app_name}"
	fi
	response=$(curl -s -X POST -H "${headers[@]}" -d "${payload}" "${url}")
	app_count=$(echo "${response}" | jq -r '.list | length')

	if [[ $app_count -eq 0 ]]; then
		print_message "Application not found"
		exit
	fi

	for (( i=0; i<app_count; i++ )); do
		app_name=$(echo "${response}" | jq -r ".list[$i].name")
		app_version=$(echo "${response}" | jq -r ".list[$i].ver")
		app_id=$(echo "${response}" | jq -r ".list[$i].id")
		hyphens=$(printf '%*s' "$((${#app_name}+${#app_version}+2))" | tr ' ' '-')
		
		print_message "\n\n\t-- App Number: $((i+1)) --"
		print_message "Application name: ${app_name}"
		print_message "Application Version: v${app_version}"
		print_message "Application ID: ${app_id}"
		print_message "$hyphens"
	done
}

download_app() {
	app_number="${1}"
	app_name=$(echo "${response}" | jq -r ".list[${app_number}].name")
	app_version=$(echo "${response}" | jq -r ".list[${app_number}].ver")
	app_id=$(echo "${response}" | jq -r ".list[${app_number}].id")

	if [ "$download_location" -eq 1 ]; then
		url="https://apiv2.iphonecake.com/appcake/appcake_api/ipastore_ios_link.php?type=1&id=${app_id}"
	else
		url="https://apiv2.iphonecake.com/appcake/appcake_api/ipastore_ios_link.php?type=2&id=${app_id}"
	fi

	response=$(curl -s -X GET -H "${headers[@]}" -d "${payload}" "${url}")
	download_lmk=$(echo "${response}" | jq -r '.link' | tr -d '"' | sed 's/^[[:space:]]*//')
	outDir="/var/mobile/appFetch/"

	if [[ ! -d ${outDir} ]]; then
		mkdir -p ${outDir}
	fi

	echo "$download_lmk"
	wget --show-progress "${download_lmk}" -O "${outDir}${app_name}.ipa"

	if [[ -f "${outDir}${app_name}.ipa" ]]; then
		print_message "${app_name} successfully downloaded to ${outDir}"
	else
		echo "Failed to download ${app_name}"
	fi
}

clear
print_message "AppFetch $ver"

read -rp "Enter the name of the app to search: " app_name

while :
do
	read -rp "Which type of IPA would you like to download?
	1) iPhoneCake
	2) ++ App
	" download_location
	if [[ $download_location -lt 1 || $download_location -gt 2 ]]; then
		print_message "Invalid Selection!"
		continue
	fi
	break
done

payload=""
headers=(
	"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
	"User-Agent: appcakej/7.2.2 (iPhone; iOS 14.8; Scale/3.00)"
	"Connection: close"
	"Host: ${HOST}"
	"Accept-Encoding: gzip, deflate"
	"Cache-Control: max-age=0"
)

search_app "$app_name"

while :
do
	read -p "Enter the number of the app you want to download: " app_number

	if ! [[ "$app_number" =~ ^[0-9]+$ ]]; then
		print_message "Invalid input. Please enter a number."
		continue
	fi

	if [ "$app_number" -lt 1 ] || [ "$app_number" -gt "$app_count" ]; then
		print_message "Invalid input. Please enter a number between 1 and $app_count."
		continue
	fi
	break
done

app_number=$((app_number-1))
download_app "$app_number"